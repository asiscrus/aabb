{"mappings":"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","sources":["js/canvasChart.js"],"sourcesContent":["ï»¿var CanvasChart = function () {\r\n    var ctx;\r\n    var margin = { top: 40, left: 75, right: 0, bottom: 75 };\r\n    var chartHeight, chartWidth, yMax, xMax, data;\r\n    var maxYValue = 0;\r\n    var ratio = 0;\r\n    var renderType = { lines: 'lines', points: 'points' };\r\n\r\n    var render = function(canvasId, dataObj) {\r\n        data = dataObj;\r\n        getMaxDataYValue();\r\n        var canvas = document.getElementById(canvasId);\r\n        chartHeight = canvas.getAttribute('height');\r\n        chartWidth = canvas.getAttribute('width');\r\n        xMax = chartWidth - (margin.left + margin.right);\r\n        yMax = chartHeight - (margin.top + margin.bottom);\r\n        ratio = yMax / maxYValue;\r\n        ctx = canvas.getContext(\"2d\");\r\n        renderChart();\r\n    };\r\n\r\n    var renderChart = function () {\r\n        renderBackground();\r\n        renderText();\r\n        renderLinesAndLabels();\r\n\r\n        //render data based upon type of renderType(s) that client supplies\r\n        if (data.renderTypes == undefined || data.renderTypes == null) data.renderTypes = [renderType.lines];\r\n        for (var i = 0; i < data.renderTypes.length; i++) {\r\n            renderData(data.renderTypes[i]);\r\n        }\r\n    };\r\n\r\n    var getMaxDataYValue = function () {\r\n        for (var i = 0; i < data.dataPoints.length; i++) {\r\n            if (data.dataPoints[i].y > maxYValue) maxYValue = data.dataPoints[i].y;\r\n        }\r\n    };\r\n\r\n    var renderBackground = function() {\r\n        var lingrad = ctx.createLinearGradient(margin.left, margin.top, xMax - margin.right, yMax);\r\n        lingrad.addColorStop(0.0, '#D4D4D4');\r\n        lingrad.addColorStop(0.2, '#fff');\r\n        lingrad.addColorStop(0.8, '#fff');\r\n        lingrad.addColorStop(1, '#D4D4D4');\r\n        ctx.fillStyle = lingrad;\r\n        ctx.fillRect(margin.left, margin.top, xMax - margin.left, yMax - margin.top);\r\n        ctx.fillStyle = 'black';\r\n    };\r\n\r\n    var renderText = function() {\r\n        var labelFont = (data.labelFont != null) ? data.labelFont : '20pt Arial';\r\n        ctx.font = labelFont;\r\n        ctx.textAlign = \"center\";\r\n\r\n        //Title\r\n        var txtSize = ctx.measureText(data.title);\r\n        ctx.fillText(data.title, (chartWidth / 2), (margin.top / 2));\r\n\r\n        //X-axis text\r\n        txtSize = ctx.measureText(data.xLabel);\r\n        ctx.fillText(data.xLabel, margin.left + (xMax / 2) - (txtSize.width / 2), yMax + (margin.bottom / 1.2));\r\n\r\n        //Y-axis text\r\n        ctx.save();\r\n        ctx.rotate(-Math.PI / 2);\r\n        ctx.font = labelFont;\r\n        ctx.fillText(data.yLabel, (yMax / 2) * -1, margin.left / 4);\r\n        ctx.restore();\r\n    };\r\n\r\n    var renderLinesAndLabels = function () {\r\n        //Vertical guide lines\r\n        var yInc = yMax / data.dataPoints.length;\r\n        var yPos = 0;\r\n        var yLabelInc = (maxYValue * ratio) / data.dataPoints.length;\r\n        var xInc = getXInc();\r\n        var xPos = margin.left;\r\n        for (var i = 0; i < data.dataPoints.length; i++) {\r\n            yPos += (i == 0) ? margin.top : yInc;\r\n            //Draw horizontal lines\r\n            drawLine(margin.left, yPos, xMax, yPos, '#E8E8E8');\r\n\r\n            //y axis labels\r\n            ctx.font = (data.dataPointFont != null) ? data.dataPointFont : '10pt Calibri';\r\n            var txt = Math.round(maxYValue - ((i == 0) ? 0 : yPos / ratio));\r\n            var txtSize = ctx.measureText(txt);\r\n            ctx.fillText(txt, margin.left - ((txtSize.width >= 14) ? txtSize.width : 10) - 7, yPos + 4);\r\n\r\n            //x axis labels\r\n            txt = data.dataPoints[i].x;\r\n            txtSize = ctx.measureText(txt);\r\n            ctx.fillText(txt, xPos, yMax + (margin.bottom / 3));\r\n            xPos += xInc;\r\n        }\r\n\r\n        //Vertical line\r\n        drawLine(margin.left, margin.top, margin.left, yMax, 'black');\r\n\r\n        //Horizontal Line\r\n        drawLine(margin.left, yMax, xMax, yMax, 'black');\r\n    };\r\n\r\n    var renderData = function(type) {\r\n        var xInc = getXInc();\r\n        var prevX = 0, \r\n            prevY = 0;\r\n\r\n        for (var i = 0; i < data.dataPoints.length; i++) {\r\n            var pt = data.dataPoints[i];\r\n            var ptY = (maxYValue - pt.y) * ratio;\r\n            if (ptY < margin.top) ptY = margin.top;\r\n            var ptX = (i * xInc) + margin.left;\r\n\r\n            if (i > 0 && type == renderType.lines) {\r\n                //Draw connecting lines\r\n                drawLine(ptX, ptY, prevX, prevY, 'black', 2);\r\n            }\r\n\r\n            if (type == renderType.points) {\r\n                var radgrad = ctx.createRadialGradient(ptX, ptY, 8, ptX - 5, ptY - 5, 0);\r\n                radgrad.addColorStop(0, 'Green');\r\n                radgrad.addColorStop(0.9, 'White');\r\n                ctx.beginPath();\r\n                ctx.fillStyle = radgrad;\r\n                //Render circle\r\n                ctx.arc(ptX, ptY, 8, 0, 2 * Math.PI, false)\r\n                ctx.fill();\r\n                ctx.lineWidth = 1;\r\n                ctx.strokeStyle = '#000';\r\n                ctx.stroke();\r\n                ctx.closePath();\r\n            }\r\n\r\n            prevX = ptX;\r\n            prevY = ptY;\r\n        }\r\n    };\r\n\r\n    var getXInc = function() {\r\n        return Math.round(xMax / data.dataPoints.length) - 1;\r\n    };\r\n\r\n    var drawLine = function(startX, startY, endX, endY, strokeStyle, lineWidth) {\r\n        if (strokeStyle != null) ctx.strokeStyle = strokeStyle;\r\n        if (lineWidth != null) ctx.lineWidth = lineWidth;\r\n        ctx.beginPath();\r\n        ctx.moveTo(startX, startY);\r\n        ctx.lineTo(endX, endY);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    };\r\n\r\n    return {\r\n        renderType: renderType,\r\n        render: render\r\n    };\r\n} ();\r\n"],"names":[],"version":3,"file":"index.6abe3bd9.js.map","sourceRoot":"/__parcel_source_root/"}