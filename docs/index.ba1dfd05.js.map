{"mappings":"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","sources":["js/canvasChart.js"],"sourcesContent":["ï»¿var CanvasChart = function () {\r\n    var ctx;\r\n    var margin = { top: 40, left: 75, right: 0, bottom: 75 };\r\n    var chartHeight, chartWidth, yMax, xMax, data;\r\n    var maxYValue = 0;\r\n    var ratio = 0;\r\n    var renderType = { lines: 'lines', points: 'points' };\r\n\r\n    var render = function(canvasId, dataObj) {\r\n        data = dataObj;\r\n        getMaxDataYValue();\r\n        var canvas = document.getElementById(canvasId);\r\n        chartHeight = canvas.getAttribute('height');\r\n        chartWidth = canvas.getAttribute('width');\r\n        xMax = chartWidth - (margin.left + margin.right);\r\n        yMax = chartHeight - (margin.top + margin.bottom);\r\n        ratio = yMax / maxYValue;\r\n        ctx = canvas.getContext(\"2d\");\r\n        renderChart();\r\n    };\r\n\r\n    var renderChart = function () {\r\n        renderBackground();\r\n        renderText();\r\n        renderLinesAndLabels();\r\n\r\n        //render data based upon type of renderType(s) that client supplies\r\n        if (data.renderTypes == undefined || data.renderTypes == null) data.renderTypes = [renderType.lines];\r\n        for (var i = 0; i < data.renderTypes.length; i++) {\r\n            renderData(data.renderTypes[i]);\r\n        }\r\n    };\r\n\r\n    var getMaxDataYValue = function () {\r\n        for (var i = 0; i < data.dataPoints.length; i++) {\r\n            if (data.dataPoints[i].y > maxYValue) maxYValue = data.dataPoints[i].y;\r\n        }\r\n    };\r\n\r\n    var renderBackground = function() {\r\n        var lingrad = ctx.createLinearGradient(margin.left, margin.top, xMax - margin.right, yMax);\r\n        lingrad.addColorStop(0.0, '#D4D4D4');\r\n        lingrad.addColorStop(0.2, '#fff');\r\n        lingrad.addColorStop(0.8, '#fff');\r\n        lingrad.addColorStop(1, '#D4D4D4');\r\n        ctx.fillStyle = lingrad;\r\n        ctx.fillRect(margin.left, margin.top, xMax - margin.left, yMax - margin.top);\r\n        ctx.fillStyle = 'black';\r\n    };\r\n\r\n    var renderText = function() {\r\n        var labelFont = (data.labelFont != null) ? data.labelFont : '20pt Arial';\r\n        ctx.font = labelFont;\r\n        ctx.textAlign = \"center\";\r\n\r\n        //Title\r\n        var txtSize = ctx.measureText(data.title);\r\n        ctx.fillText(data.title, (chartWidth / 2), (margin.top / 2));\r\n\r\n        //X-axis text\r\n        txtSize = ctx.measureText(data.xLabel);\r\n        ctx.fillText(data.xLabel, margin.left + (xMax / 2) - (txtSize.width / 2), yMax + (margin.bottom / 1.2));\r\n\r\n        //Y-axis text\r\n        ctx.save();\r\n        ctx.rotate(-Math.PI / 2);\r\n        ctx.font = labelFont;\r\n        ctx.fillText(data.yLabel, (yMax / 2) * -1, margin.left / 4);\r\n        ctx.restore();\r\n    };\r\n\r\n    var renderLinesAndLabels = function () {\r\n        //Vertical guide lines\r\n        var yInc = yMax / data.dataPoints.length;\r\n        var yPos = 0;\r\n        var yLabelInc = (maxYValue * ratio) / data.dataPoints.length;\r\n        var xInc = getXInc();\r\n        var xPos = margin.left;\r\n        for (var i = 0; i < data.dataPoints.length; i++) {\r\n            yPos += (i == 0) ? margin.top : yInc;\r\n            //Draw horizontal lines\r\n            drawLine(margin.left, yPos, xMax, yPos, '#E8E8E8');\r\n\r\n            //y axis labels\r\n            ctx.font = (data.dataPointFont != null) ? data.dataPointFont : '10pt Calibri';\r\n            var txt = Math.round(maxYValue - ((i == 0) ? 0 : yPos / ratio));\r\n            var txtSize = ctx.measureText(txt);\r\n            ctx.fillText(txt, margin.left - ((txtSize.width >= 14) ? txtSize.width : 10) - 7, yPos + 4);\r\n\r\n            //x axis labels\r\n            txt = data.dataPoints[i].x;\r\n            txtSize = ctx.measureText(txt);\r\n            ctx.fillText(txt, xPos, yMax + (margin.bottom / 3));\r\n            xPos += xInc;\r\n        }\r\n\r\n        //Vertical line\r\n        drawLine(margin.left, margin.top, margin.left, yMax, 'black');\r\n\r\n        //Horizontal Line\r\n        drawLine(margin.left, yMax, xMax, yMax, 'black');\r\n    };\r\n\r\n    var renderData = function(type) {\r\n        var xInc = getXInc();\r\n        var prevX = 0, \r\n            prevY = 0;\r\n\r\n        for (var i = 0; i < data.dataPoints.length; i++) {\r\n            var pt = data.dataPoints[i];\r\n            var ptY = (maxYValue - pt.y) * ratio;\r\n            if (ptY < margin.top) ptY = margin.top;\r\n            var ptX = (i * xInc) + margin.left;\r\n\r\n            if (i > 0 && type == renderType.lines) {\r\n                //Draw connecting lines\r\n                drawLine(ptX, ptY, prevX, prevY, 'black', 2);\r\n            }\r\n\r\n            if (type == renderType.points) {\r\n                var radgrad = ctx.createRadialGradient(ptX, ptY, 8, ptX - 5, ptY - 5, 0);\r\n                radgrad.addColorStop(0, 'Green');\r\n                radgrad.addColorStop(0.9, 'White');\r\n                ctx.beginPath();\r\n                ctx.fillStyle = radgrad;\r\n                //Render circle\r\n                ctx.arc(ptX, ptY, 8, 0, 2 * Math.PI, false)\r\n                ctx.fill();\r\n                ctx.lineWidth = 1;\r\n                ctx.strokeStyle = '#000';\r\n                ctx.stroke();\r\n                ctx.closePath();\r\n            }\r\n\r\n            prevX = ptX;\r\n            prevY = ptY;\r\n        }\r\n    };\r\n\r\n    var getXInc = function() {\r\n        return Math.round(xMax / data.dataPoints.length) - 1;\r\n    };\r\n\r\n    var drawLine = function(startX, startY, endX, endY, strokeStyle, lineWidth) {\r\n        if (strokeStyle != null) ctx.strokeStyle = strokeStyle;\r\n        if (lineWidth != null) ctx.lineWidth = lineWidth;\r\n        ctx.beginPath();\r\n        ctx.moveTo(startX, startY);\r\n        ctx.lineTo(endX, endY);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    };\r\n\r\n    return {\r\n        renderType: renderType,\r\n        render: render\r\n    };\r\n} ();\r\n"],"names":["CanvasChart","ctx","chartHeight","chartWidth","yMax","xMax","data","margin","maxYValue","ratio","renderType","lines","points","renderChart","renderBackground","renderText","renderLinesAndLabels","undefined","renderTypes","i","length","renderData","getMaxDataYValue","dataPoints","y","lingrad","createLinearGradient","addColorStop","fillStyle","fillRect","labelFont","font","textAlign","txtSize","measureText","title","fillText","xLabel","width","save","rotate","Math","PI","yLabel","restore","yInc","yPos","xInc","getXInc","xPos","drawLine","dataPointFont","txt","round","x","type","prevX","prevY","pt","ptY","ptX","radgrad","createRadialGradient","beginPath","arc","fill","lineWidth","strokeStyle","stroke","closePath","startX","startY","endX","endY","moveTo","lineTo","render","canvasId","dataObj","canvas","document","getElementById","getAttribute","getContext"],"version":3,"file":"index.ba1dfd05.js.map"}